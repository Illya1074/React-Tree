{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable';\n\nconst TreeItem = ({\n  item,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => {\n  _s();\n\n  const [lastChange, setLastChange] = useState(item.title);\n\n  const handleBlur = id => {\n    console.log(id, lastChange);\n  };\n\n  const giveVal = evt => {\n    // setLastChange(evt.target.value)\n    console.log(evt.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree_node\",\n    style: {\n      paddingLeft: '20px',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree_node_item\",\n      children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n        className: \"tree_node_item_add-button\",\n        onBlur: () => handleBlur(item.id),\n        html: lastChange,\n        onChange: giveVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => openNode(item.id),\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => addNode(item.id),\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => deleteNodeFun(item.id),\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), item.items && item.state === true ? /*#__PURE__*/_jsxDEV(Tree, {\n      items: item.items,\n      openNode: openNode,\n      addNode: addNode,\n      deleteNodeFun: deleteNodeFun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 50\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeItem, \"Rz/kQPF1BhK0wAU5AgDVanKnVUE=\");\n\n_c = TreeItem;\n\nconst Tree = ({\n  items,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((i, key) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i,\n    openNode: openNode,\n    addNode: addNode,\n    deleteNodeFun: deleteNodeFun\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 28\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 61\n}, this);\n\n_c2 = Tree;\nexport default Tree;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TreeItem\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","useEffect","useState","ContentEditable","TreeItem","item","openNode","addNode","deleteNodeFun","lastChange","setLastChange","title","handleBlur","id","console","log","giveVal","evt","target","value","paddingLeft","cursor","items","state","Tree","map","i","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AAE3D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACG,IAAI,CAACM,KAAN,CAA5C;;AAEA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AAEvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAgBJ,UAAhB;AAEH,GAJD;;AAMA,QAAMO,OAAO,GAAGC,GAAG,IAAI;AACnB;AACCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,MAAJ,CAAWC,KAAvB;AACJ,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAE,MAAd;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BAEI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,2BAA3B;AAAuD,QAAA,MAAM,EAAE,MAAIT,UAAU,CAACP,IAAI,CAACQ,EAAN,CAA7E;AAAyF,QAAA,IAAI,EAAEJ,UAA/F;AAA4G,QAAA,QAAQ,EAAEO;AAAtH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAE,MAAMV,QAAQ,CAACD,IAAI,CAACQ,EAAN,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,SAAS,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAE,MAAMN,OAAO,CAACF,IAAI,CAACQ,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAI,QAAA,SAAS,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAE,MAAML,aAAa,CAACH,IAAI,CAACQ,EAAN,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKR,IAAI,CAACiB,KAAL,IAAcjB,IAAI,CAACkB,KAAL,KAAe,IAA7B,gBAAoC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAElB,IAAI,CAACiB,KAAlB;AAAyB,MAAA,QAAQ,EAAEhB,QAAnC;AAA6C,MAAA,OAAO,EAAEC,OAAtD;AAA+D,MAAA,aAAa,EAAEC;AAA9E;AAAA;AAAA;AAAA;AAAA,YAApC,GAAqI,IAR1I;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BD;;GAAMJ,Q;;KAAAA,Q;;AAkCN,MAAMoB,IAAI,GAAG,CAAC;AAACF,EAAAA,KAAD;AAAQhB,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,kBAA+C;AAAA,YACvDc,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY,QAAC,QAAD;AAAqB,IAAA,IAAI,EAAED,CAA3B;AAA8B,IAAA,QAAQ,EAAEpB,QAAxC;AAAkD,IAAA,OAAO,EAAEC,OAA3D;AAAoE,IAAA,aAAa,EAAEC;AAAnF,KAAgBmB,GAAhB;AAAA;AAAA;AAAA;AAAA,UAAtB;AADuD;AAAA;AAAA;AAAA;AAAA,QAA5D;;MAAMH,I;AAKN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable'\n\n\n \n\nconst TreeItem = ({item, openNode, addNode, deleteNodeFun}) => {\n    \n    const [lastChange, setLastChange] = useState(item.title)\n   \n    const handleBlur = (id) => {        \n    \n        console.log(id, lastChange)\n        \n    };\n\n    const giveVal = evt => {        \n        // setLastChange(evt.target.value)\n         console.log(evt.target.value)\n    };\n\n   \n    return (\n        <div className=\"tree_node\" style={{paddingLeft: '20px', cursor: 'pointer'}}>\n            <div className=\"tree_node_item\">\n                {/* <h4 onClick={() => openNode(item.id)}>{item.title}</h4> */}\n                <ContentEditable className='tree_node_item_add-button' onBlur={()=>handleBlur(item.id)}  html={lastChange}  onChange={giveVal}  />\n                <h5 className='tree_node_item_add-button' onClick={() => openNode(item.id)}>^</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => addNode(item.id)}>add</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => deleteNodeFun(item.id)}>del</h5>\n            </div>\n            {item.items && item.state === true ? <Tree items={item.items} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/> : null}\n        </div>\n    )\n} \n        \n   \n\n\n\nconst Tree = ({items, openNode, addNode, deleteNodeFun}) => <div>\n    {items.map((i, key) => <TreeItem  key={key} item={i} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/>)}    \n</div>\n\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}