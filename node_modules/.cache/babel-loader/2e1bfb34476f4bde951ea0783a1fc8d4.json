{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable';\n\nconst TreeItem = ({\n  item,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => {\n  _s();\n\n  const [lastChange, setLastChange] = useState({\n    val: item.title,\n    id: null\n  });\n\n  const handleBlur = () => {\n    console.log(lastChange.id, lastChange.val);\n  };\n\n  const giveVal = evt => {\n    setLastChange({\n      val: evt.target.value,\n      id: lastChange.id\n    }); // console.log(evt.target.value)\n  };\n\n  const giveId = id => {\n    setLastChange({\n      val: lastChange.val,\n      id: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree_node\",\n    style: {\n      paddingLeft: '20px',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree_node_item\",\n      children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n        className: \"tree_node_item_add-button\",\n        onBlur: handleBlur,\n        html: lastChange.val,\n        onChange: giveVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => openNode(item.id),\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => addNode(item.id),\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"tree_node_item_add-button\",\n        onClick: () => deleteNodeFun(item.id),\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), item.items && item.state === true ? /*#__PURE__*/_jsxDEV(Tree, {\n      items: item.items,\n      openNode: openNode,\n      addNode: addNode,\n      deleteNodeFun: deleteNodeFun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 50\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeItem, \"vAzRAnfzBdBUyNRUEaEK+RKQnEA=\");\n\n_c = TreeItem;\n\nconst Tree = ({\n  items,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((i, key) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i,\n    openNode: openNode,\n    addNode: addNode,\n    deleteNodeFun: deleteNodeFun\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 28\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 61\n}, this);\n\n_c2 = Tree;\nexport default Tree;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TreeItem\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","useEffect","useState","ContentEditable","TreeItem","item","openNode","addNode","deleteNodeFun","lastChange","setLastChange","val","title","id","handleBlur","console","log","giveVal","evt","target","value","giveId","paddingLeft","cursor","items","state","Tree","map","i","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable'\n\n\n \n\nconst TreeItem = ({item, openNode, addNode, deleteNodeFun}) => {\n    \n    const [lastChange, setLastChange] = useState({\n        val: item.title,\n        id: null\n    })\n   \n    const handleBlur = () => {        \n    \n        console.log(lastChange.id, lastChange.val)\n        \n    };\n\n    const giveVal = evt => {        \n        setLastChange({\n            val: evt.target.value,\n            id: lastChange.id\n        })\n        // console.log(evt.target.value)\n    };\n\n    const giveId = id => {\n        setLastChange({\n            val: lastChange.val,\n            id: id\n        })\n    }\n\n    return (\n        <div className=\"tree_node\" style={{paddingLeft: '20px', cursor: 'pointer'}}>\n            <div className=\"tree_node_item\">\n                {/* <h4 onClick={() => openNode(item.id)}>{item.title}</h4> */}\n                <ContentEditable className='tree_node_item_add-button' onBlur={handleBlur}  html={lastChange.val}  onChange={giveVal} />\n                <h5 className='tree_node_item_add-button' onClick={() => openNode(item.id)}>^</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => addNode(item.id)}>add</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => deleteNodeFun(item.id)}>del</h5>\n            </div>\n            {item.items && item.state === true ? <Tree items={item.items} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/> : null}\n        </div>\n    )\n} \n        \n   \n\n\n\nconst Tree = ({items, openNode, addNode, deleteNodeFun}) => <div>\n    {items.map((i, key) => <TreeItem  key={key} item={i} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/>)}    \n</div>\n\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}