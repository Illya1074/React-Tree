{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Circle/Circle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Draggable from '../Draggable/Draggable';\nimport './Circle.css';\n\nconst Circle = ({\n  isDragging,\n  myDispatch\n}) => {\n  _s();\n\n  const [postState, setPostState] = useState(false);\n  const [mousePosition, setMousePosition] = useState({\n    x: null,\n    y: null\n  });\n  const [deltaPos, setDeltaPos] = useState({\n    x: null,\n    y: null\n  });\n\n  const updateMousePosition = ev => {\n    setMousePosition({\n      x: ev.pageX,\n      y: ev.pageY\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition);\n    window.addEventListener(\"mouseup\", onMouseUp);\n    return () => window.removeEventListener(\"mousemove\", updateMousePosition);\n  }, []);\n\n  const onMouseDown = e => {\n    console.log('down');\n    setPostState(true);\n    e.preventDefault();\n    setDeltaPos({\n      x: e.pageX,\n      y: e.pageY\n    });\n  };\n\n  const onMouseUp = e => {\n    // console.log('onMouseUp')\n    setPostState(false);\n    myDispatch();\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Draggable onStart={onStart} onStop={onStop}>\n    _jsxDEV(\"span\", {\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      style: {\n        transition: '0.05s',\n        transform: postState ? 'translate(' + (mousePosition.x - deltaPos.x - 10) + 'px,' + (mousePosition.y - deltaPos.y - 10) + 'px' + ')' : null\n      },\n      className: postState ? 'element active' : 'element',\n      children: \" \\u25C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Circle, \"PxJ1z+/u8TFRk7Okbx3zpPXPXvg=\");\n\n_c = Circle;\nexport default Circle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Circle\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Circle/Circle.js"],"names":["React","useState","useEffect","Draggable","Circle","isDragging","myDispatch","postState","setPostState","mousePosition","setMousePosition","x","y","deltaPos","setDeltaPos","updateMousePosition","ev","pageX","pageY","window","addEventListener","onMouseUp","removeEventListener","onMouseDown","e","console","log","preventDefault","transition","transform"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAAA;;AAIzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC;AAAEU,IAAAA,CAAC,EAAE,IAAL;AAAWC,IAAAA,CAAC,EAAE;AAAd,GAAD,CAAlD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACrCU,IAAAA,CAAC,EAAE,IADkC;AAErCC,IAAAA,CAAC,EAAE;AAFkC,GAAD,CAAxC;;AAKA,QAAMG,mBAAmB,GAAGC,EAAE,IAAI;AAC9BN,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,CAAC,EAAEK,EAAE,CAACC,KAAR;AAAeL,MAAAA,CAAC,EAAEI,EAAE,CAACE;AAArB,KAAD,CAAhB;AAEH,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCL,mBAArC;AACAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAkCC,SAAlC;AACA,WAAO,MAAMF,MAAM,CAACG,mBAAP,CAA2B,WAA3B,EAAwCP,mBAAxC,CAAb;AACH,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAlB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAgB,IAAAA,CAAC,CAACG,cAAF;AACAb,IAAAA,WAAW,CAAC;AACZH,MAAAA,CAAC,EAAEa,CAAC,CAACP,KADO;AAEZL,MAAAA,CAAC,EAAEY,CAAC,CAACN;AAFO,KAAD,CAAX;AAKH,GATD;;AAWA,QAAMG,SAAS,GAAIG,CAAD,IAAO;AACrB;AACAhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,UAAU;AACb,GAJD;;AAMA;AAAA;AACI;AAEA;AAAO,MAAA,WAAW,EAAEiB,WAApB;AAAiC,MAAA,SAAS,EAAEF,SAA5C;AAAuD,MAAA,KAAK,EAAE;AAACO,QAAAA,UAAU,EAAC,OAAZ;AAAqBC,QAAAA,SAAS,EAAGtB,SAAS,GAAG,gBAAcE,aAAa,CAACE,CAAd,GAAgBE,QAAQ,CAACF,CAAzB,GAA2B,EAAzC,IAA6C,KAA7C,IAAoDF,aAAa,CAACG,CAAd,GAAgBC,QAAQ,CAACD,CAAzB,GAA2B,EAA/E,IAAmF,IAAnF,GAAwF,GAA3F,GAAiG;AAA3I,OAA9D;AAAiN,MAAA,SAAS,EAAEL,SAAS,GAAG,gBAAH,GAAsB,SAA3P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAMH,CA9CD;;GAAMH,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Draggable from '../Draggable/Draggable';\nimport './Circle.css';\n\nconst Circle = ({isDragging, myDispatch}) => {\n    \n    \n\n    const [postState, setPostState] = useState(false) \n    const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n    const [deltaPos, setDeltaPos] = useState({\n        x: null,\n        y: null,\n    })\n\n    const updateMousePosition = ev => {\n        setMousePosition({ x: ev.pageX, y: ev.pageY });\n        \n    };\n\n    useEffect(() => {\n        window.addEventListener(\"mousemove\", updateMousePosition);\n        window.addEventListener(\"mouseup\",onMouseUp);\n        return () => window.removeEventListener(\"mousemove\", updateMousePosition);\n    }, []);\n\n\n    const onMouseDown = (e) => {\n        console.log('down')\n        setPostState(true)\n        e.preventDefault();\n        setDeltaPos({\n        x: e.pageX,\n        y: e.pageY\n        })\n        \n    }\n\n    const onMouseUp = (e) => {\n        // console.log('onMouseUp')\n        setPostState(false)\n        myDispatch()\n    }\n\n    return (\n        // <Draggable onStart={onStart} onStop={onStop}>\n                \n        <span  onMouseDown={onMouseDown} onMouseUp={onMouseUp} style={{transition:'0.05s', transform:  postState ? 'translate('+(mousePosition.x-deltaPos.x-10)+'px,'+(mousePosition.y-deltaPos.y-10)+'px'+')' : null}}  className={postState ? 'element active' : 'element'}> â—‰</span>       \n        \n    )\n}\n\nexport default Circle\n"]},"metadata":{},"sourceType":"module"}