{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\";\nimport React from 'react';\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable';\n\nconst editT = val => {\n  console.log(val);\n};\n\nconst handleChange = evt => {\n  setTimeout(editT(evt.target.value), 3000); // console.log(evt.target.value);\n};\n\nconst TreeItem = ({\n  item,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"tree_node\",\n  style: {\n    paddingLeft: '20px',\n    cursor: 'pointer'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree_node_item\",\n    children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n      className: \"tree_node_item_add-button\",\n      html: item.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"tree_node_item_add-button\",\n      onClick: () => openNode(item.id),\n      children: \"^\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"tree_node_item_add-button\",\n      onClick: () => addNode(item.id),\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"tree_node_item_add-button\",\n      onClick: () => deleteNodeFun(item.id),\n      children: \"del\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this), item.items && item.state === true ? /*#__PURE__*/_jsxDEV(Tree, {\n    items: item.items,\n    openNode: openNode,\n    addNode: addNode,\n    deleteNodeFun: deleteNodeFun\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 50\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 9\n}, this);\n\n_c = TreeItem;\n\nconst Tree = ({\n  items,\n  openNode,\n  addNode,\n  deleteNodeFun\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((i, key) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i,\n    openNode: openNode,\n    addNode: addNode,\n    deleteNodeFun: deleteNodeFun\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 28\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 61\n}, this);\n\n_c2 = Tree;\nexport default Tree;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TreeItem\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","ContentEditable","editT","val","console","log","handleChange","evt","setTimeout","target","value","TreeItem","item","openNode","addNode","deleteNodeFun","paddingLeft","cursor","title","id","items","state","Tree","map","i","key"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,KAAK,GAAIC,GAAD,IAAS;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAFD;;AAIA,MAAMG,YAAY,GAAGC,GAAG,IAAI;AACxBC,EAAAA,UAAU,CAACN,KAAK,CAACK,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAN,EAA0B,IAA1B,CAAV,CADwB,CAExB;AACH,CAHD;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,kBACT;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,KAAK,EAAE;AAACC,IAAAA,WAAW,EAAE,MAAd;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAAlC;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BAEI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,2BAA3B;AAAuD,MAAA,IAAI,EAAEL,IAAI,CAACM,KAAlE;AAA0E,MAAA,QAAQ,EAAEZ;AAApF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAA0C,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAACD,IAAI,CAACO,EAAN,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAI,MAAA,SAAS,EAAC,2BAAd;AAA0C,MAAA,OAAO,EAAE,MAAML,OAAO,CAACF,IAAI,CAACO,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAA0C,MAAA,OAAO,EAAE,MAAMJ,aAAa,CAACH,IAAI,CAACO,EAAN,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAQKP,IAAI,CAACQ,KAAL,IAAcR,IAAI,CAACS,KAAL,KAAe,IAA7B,gBAAoC,QAAC,IAAD;AAAM,IAAA,KAAK,EAAET,IAAI,CAACQ,KAAlB;AAAyB,IAAA,QAAQ,EAAEP,QAAnC;AAA6C,IAAA,OAAO,EAAEC,OAAtD;AAA+D,IAAA,aAAa,EAAEC;AAA9E;AAAA;AAAA;AAAA;AAAA,UAApC,GAAqI,IAR1I;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;;KAAMJ,Q;;AAeN,MAAMW,IAAI,GAAG,CAAC;AAACF,EAAAA,KAAD;AAAQP,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,kBAA+C;AAAA,YACvDK,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY,QAAC,QAAD;AAAqB,IAAA,IAAI,EAAED,CAA3B;AAA8B,IAAA,QAAQ,EAAEX,QAAxC;AAAkD,IAAA,OAAO,EAAEC,OAA3D;AAAoE,IAAA,aAAa,EAAEC;AAAnF,KAAgBU,GAAhB;AAAA;AAAA;AAAA;AAAA,UAAtB;AADuD;AAAA;AAAA;AAAA;AAAA,QAA5D;;MAAMH,I;AAKN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport './Tree.css';\nimport ContentEditable from 'react-contenteditable'\n\nconst editT = (val) => {\n    console.log(val)\n}\n\nconst handleChange = evt => {\n    setTimeout(editT(evt.target.value), 3000 )\n    // console.log(evt.target.value);\n};\n \n\nconst TreeItem = ({item, openNode, addNode, deleteNodeFun}) => \n        <div className=\"tree_node\" style={{paddingLeft: '20px', cursor: 'pointer'}}>\n            <div className=\"tree_node_item\">\n                {/* <h4 onClick={() => openNode(item.id)}>{item.title}</h4> */}\n                <ContentEditable className='tree_node_item_add-button' html={item.title}  onChange={handleChange} />\n                <h5 className='tree_node_item_add-button' onClick={() => openNode(item.id)}>^</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => addNode(item.id)}>add</h5>\n                <h5 className='tree_node_item_add-button' onClick={() => deleteNodeFun(item.id)}>del</h5>\n            </div>\n            {item.items && item.state === true ? <Tree items={item.items} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/> : null}\n        </div>\n   \n\n\n\nconst Tree = ({items, openNode, addNode, deleteNodeFun}) => <div>\n    {items.map((i, key) => <TreeItem  key={key} item={i} openNode={openNode} addNode={addNode} deleteNodeFun={deleteNodeFun}/>)}    \n</div>\n\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}