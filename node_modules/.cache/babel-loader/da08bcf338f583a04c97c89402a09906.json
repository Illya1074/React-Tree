{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst Tree = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n  const tree = [{\n    id: '1',\n    route: 1,\n    title: 'item1',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 11,\n      title: 'item1.1',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 111,\n        title: 'item1.1.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 112,\n        title: 'item1.1.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 113,\n        title: 'item1.1.3',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }, {\n      id: '2.2',\n      route: 12,\n      title: 'item1.2',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 121,\n        title: 'item1.2.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 122,\n        title: 'item1.2.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }]\n  }, {\n    id: '3',\n    route: 2,\n    title: 'item2',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 21,\n      title: 'item2.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '3',\n    route: 3,\n    title: 'item3',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 31,\n      title: 'item3.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '6',\n    route: 4,\n    title: 'item4',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 41,\n      title: 'item4.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }];\n\n  const render = (tree, state = [], space = ' ') => {\n    let arr = state;\n    tree.map(item => {\n      arr = [...arr, item.title];\n      console.log(item.title, arr);\n\n      if (item.items !== []) {\n        render(item.items, arr, space + ' ');\n      }\n    });\n  }; // const render = (tree, state=[], space=0) => {\n  //     // console.log(tree[0].title);\n  //     let arr = state;\n  //     // console.log(space)\n  //     for (let i = 0, length = tree.length; i < length; i++) {\n  //         // console.log(tree[i].title, space);\n  //         arr.push({\n  //             title: tree[i].title,\n  //             space: space\n  //         })\n  //         if(tree[i].items !== []){\n  //             render(tree[i].items, arr, space+1);\n  //         }\n  //         // space--;    \n  //     }\n  //   return state;  \n  // }\n\n\n  console.log(render(tree));\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tree, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","useState","Tree","state","setState","tree","id","route","title","icon","items","render","space","arr","map","item","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst Tree = () => {\n    const [state, setState] = useState([]); \n    const tree = [\n      {\n          id: '1',\n          route:1,\n          title: 'item1', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 11,\n                  title: 'item1.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: [\n                      {\n                          id: '2',\n                          route: 111,\n                          title: 'item1.1.1',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 112,\n                          title: 'item1.1.2',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 113,\n                          title: 'item1.1.3',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      }\n                  ]\n              },\n              {\n                id: '2.2',\n                route: 12,\n                title: 'item1.2',\n                icon: 'file',\n                state: 'open',\n                items: [\n                    {\n                        id: '2',\n                        route: 121,\n                        title: 'item1.2.1',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    },\n                    {\n                        id: '2',\n                        route: 122,\n                        title: 'item1.2.2',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    }\n                ]\n            }\n          ]\n      },\n      {\n          id: '3',\n          route: 2,\n          title: 'item2', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 21,\n                  title: 'item2.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      },\n      {\n          id: '3',\n          route: 3,\n          title: 'item3', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 31,\n                  title: 'item3.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      },\n      {\n          id: '6',\n          route: 4,\n          title: 'item4', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 41,\n                  title: 'item4.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      }\n    ]\n    \n\n\n    const render = (tree, state=[], space=' ') => {\n        let arr = state;\n        tree.map((item) => {\n            arr = [...arr, item.title] \n            console.log(item.title, arr);\n            \n            if(item.items !== []){\n                render(item.items, arr, space + ' ');\n            }          \n        } )\n    }\n\n    // const render = (tree, state=[], space=0) => {\n      \n    //     // console.log(tree[0].title);\n    //     let arr = state;\n    //     // console.log(space)\n    //     for (let i = 0, length = tree.length; i < length; i++) {\n    //         // console.log(tree[i].title, space);\n    //         arr.push({\n    //             title: tree[i].title,\n    //             space: space\n    //         })\n    //         if(tree[i].items !== []){\n    //             render(tree[i].items, arr, space+1);\n    //         }\n    //         // space--;    \n    //     }\n        \n    //   return state;  \n      \n    // }\n\n    console.log(render(tree))\n    \n    \n\n  return (\n    <div>\n        {/* {render(tree).map((item,i) => <h1 style = {{paddingLeft:item.space*30+'px'}} key={i}>{item.title}</h1>)} */}\n    </div>\n  )\n}\n\nexport default Tree\n"]},"metadata":{},"sourceType":"module"}