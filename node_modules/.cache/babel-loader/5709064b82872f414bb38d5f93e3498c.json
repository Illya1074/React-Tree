{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyNavbar from './DumbComponents/Navbar/MyNavbar';\nimport Sidebar from './DumbComponents/Sidebar/Sidebar';\nimport Tasks from './DumbComponents/TaskSection/Tasks/Tasks';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { complete, addTask, deleteTask, priorTask, catAdd } from './Actions/index';\nimport { Switch, Route } from \"react-router-dom\";\n\nconst Layout = () => {\n  _s();\n\n  const tasks = useSelector(state => state.tasks);\n  const categories = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n\n  const com = id => {\n    dispatch(complete(id));\n  };\n\n  const taskAdd = obj => {\n    dispatch(addTask(obj));\n  };\n\n  const del = id => {\n    dispatch(deleteTask(id));\n  };\n\n  const prior = (id, priority) => {\n    dispatch(priorTask(id, priority));\n  };\n\n  const categoryAdd = cat => {\n    console.log(categories);\n    dispatch(catAdd(cat));\n  }; // console.log(tasks);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      categAdd: categoryAdd,\n      cats: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [categories.map((item, i) => /*#__PURE__*/_jsxDEV(Route, {\n        path: '/' + item.val,\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          cat: item.val,\n          prior: prior,\n          del: del,\n          taskAdd: taskAdd,\n          complete: com,\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/' + 'search',\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          cat: 'search',\n          prior: prior,\n          del: del,\n          taskAdd: taskAdd,\n          complete: com,\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Layout, \"PLIV1tmAPAbFnno3wcG1BKs7N1I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Layout.js"],"names":["React","useState","MyNavbar","Sidebar","Tasks","useSelector","useDispatch","complete","addTask","deleteTask","priorTask","catAdd","Switch","Route","Layout","tasks","state","categories","dispatch","com","id","taskAdd","obj","del","prior","priority","categoryAdd","cat","console","log","map","item","i","val"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,QAAR,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAA+D,iBAA/D;AACA,SACIC,MADJ,EAEIC,KAFJ,QAGO,kBAHP;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,UAAU,GAAGZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,GAAG,GAAIC,EAAD,IAAQ;AAChBF,IAAAA,QAAQ,CAACX,QAAQ,CAACa,EAAD,CAAT,CAAR;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACrBJ,IAAAA,QAAQ,CAACV,OAAO,CAACc,GAAD,CAAR,CAAR;AACH,GAFD;;AAIA,QAAMC,GAAG,GAAIH,EAAD,IAAQ;AAChBF,IAAAA,QAAQ,CAACT,UAAU,CAACW,EAAD,CAAX,CAAR;AACH,GAFD;;AAIA,QAAMI,KAAK,GAAG,CAACJ,EAAD,EAAKK,QAAL,KAAkB;AAC5BP,IAAAA,QAAQ,CAACR,SAAS,CAACU,EAAD,EAAKK,QAAL,CAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACAC,IAAAA,QAAQ,CAACP,MAAM,CAACgB,GAAD,CAAP,CAAR;AACH,GAHD,CAtBiB,CA4BjB;;;AAEA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAED,WAAnB;AAAgC,MAAA,IAAI,EAAET;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAA,iBAEKA,UAAU,CAACa,GAAX,CAAe,CAACC,IAAD,EAAMC,CAAN,kBACZ,QAAC,KAAD;AAAe,QAAA,IAAI,EAAE,MAAMD,IAAI,CAACE,GAAhC;AAAA,+BACI,QAAC,KAAD;AAAQ,UAAA,GAAG,EAAEF,IAAI,CAACE,GAAlB;AAAuB,UAAA,KAAK,EAAET,KAA9B;AAAqC,UAAA,GAAG,EAAED,GAA1C;AAA+C,UAAA,OAAO,EAAEF,OAAxD;AAAiE,UAAA,QAAQ,EAAEF,GAA3E;AAAgF,UAAA,KAAK,EAAEJ;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ,SAAYiB,CAAZ;AAAA;AAAA;AAAA;AAAA,cADH,CAFL,eAOI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,MAAM,QAAnB;AAAA,+BACI,QAAC,KAAD;AAAQ,UAAA,GAAG,EAAE,QAAb;AAAuB,UAAA,KAAK,EAAER,KAA9B;AAAqC,UAAA,GAAG,EAAED,GAA1C;AAA+C,UAAA,OAAO,EAAEF,OAAxD;AAAiE,UAAA,QAAQ,EAAEF,GAA3E;AAAgF,UAAA,KAAK,EAAEJ;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAnDD;;GAAMD,M;UAEYT,W,EACKA,W,EACFC,W;;;KAJfQ,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport MyNavbar from './DumbComponents/Navbar/MyNavbar'\nimport Sidebar from './DumbComponents/Sidebar/Sidebar'\nimport Tasks from './DumbComponents/TaskSection/Tasks/Tasks'\nimport { useSelector } from 'react-redux'\nimport {useDispatch} from 'react-redux';\nimport {complete, addTask, deleteTask, priorTask, catAdd} from './Actions/index';\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nconst Layout = () => {\n    \n    const tasks = useSelector(state => state.tasks);\n    const categories = useSelector(state => state.categories);\n    const dispatch = useDispatch();\n\n    const com = (id) => {\n        dispatch(complete(id))\n    }\n\n    const taskAdd = (obj) => {\n        dispatch(addTask(obj))\n    }\n\n    const del = (id) => {\n        dispatch(deleteTask(id));\n    }\n\n    const prior = (id, priority) => {\n        dispatch(priorTask(id, priority))\n    }\n\n    const categoryAdd = (cat) => {\n        console.log(categories)\n        dispatch(catAdd(cat))\n    }\n\n\n    // console.log(tasks);\n\n    return (\n        <div>\n            <MyNavbar/>\n            \n            <Sidebar categAdd={categoryAdd} cats={categories}/>\n            <Switch>\n\n                {categories.map((item,i) => (\n                    <Route key={i} path={'/' + item.val}>\n                        <Tasks  cat={item.val} prior={prior} del={del} taskAdd={taskAdd} complete={com} tasks={tasks}/>\n                    </Route>\n                ))}\n                <Route path={'/' + 'search'}>\n                    <Tasks  cat={'search'} prior={prior} del={del} taskAdd={taskAdd} complete={com} tasks={tasks}/>\n                </Route>\n                \n\n            </Switch>\n            \n        </div>\n    )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}