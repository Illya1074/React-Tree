{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Draggable/Draggable.js\",\n    _s = $RefreshSig$();\n\nimport './Draggable.css';\nimport { useState, useEffect } from 'react';\n\nfunction Draggable(props) {\n  _s();\n\n  const [postState, setPostState] = useState(false);\n  const [mousePosition, setMousePosition] = useState({\n    x: null,\n    y: null\n  });\n  const [deltaPos, setDeltaPos] = useState({\n    x: null,\n    y: null\n  });\n\n  const updateMousePosition = ev => {\n    setMousePosition({\n      x: ev.pageX,\n      y: ev.pageY\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition);\n    window.addEventListener(\"mouseup\", onMouseUp);\n    return () => window.removeEventListener(\"mousemove\", updateMousePosition);\n  }, []);\n\n  const onMouseDown = e => {\n    console.log('down');\n    setPostState(true);\n    e.preventDefault();\n    setDeltaPos({\n      x: e.pageX,\n      y: e.pageY\n    });\n  };\n\n  const onMouseUp = e => {\n    // console.log('onMouseUp')\n    setPostState(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div onMouseMove={postState ? onMouseMove : onMouseMove} onMouseUp={onMouseUp} className={postState ? 'wrap' : 'wrap'}>\n    _jsxDEV(\"span\", {\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      style: {\n        transition: '0.05s',\n        transform: postState ? 'translate(' + (mousePosition.x - deltaPos.x - 10) + 'px,' + (mousePosition.y - deltaPos.y - 10) + 'px' + ')' : null\n      },\n      className: postState ? 'element active' : 'element',\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this) // </div>\n\n  );\n}\n\n_s(Draggable, \"lH6eI0BpZ3gpPDdHcPkGnv+duqY=\");\n\n_c = Draggable;\nexport default Draggable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draggable\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Draggable/Draggable.js"],"names":["useState","useEffect","Draggable","props","postState","setPostState","mousePosition","setMousePosition","x","y","deltaPos","setDeltaPos","updateMousePosition","ev","pageX","pageY","window","addEventListener","onMouseUp","removeEventListener","onMouseDown","e","console","log","preventDefault","transition","transform","children"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAGxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC;AAAEQ,IAAAA,CAAC,EAAE,IAAL;AAAWC,IAAAA,CAAC,EAAE;AAAd,GAAD,CAAlD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACvCQ,IAAAA,CAAC,EAAE,IADoC;AAEvCC,IAAAA,CAAC,EAAE;AAFoC,GAAD,CAAxC;;AAKA,QAAMG,mBAAmB,GAAGC,EAAE,IAAI;AAChCN,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,CAAC,EAAEK,EAAE,CAACC,KAAR;AAAeL,MAAAA,CAAC,EAAEI,EAAE,CAACE;AAArB,KAAD,CAAhB;AAED,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCL,mBAArC;AACAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAkCC,SAAlC;AACA,WAAO,MAAMF,MAAM,CAACG,mBAAP,CAA2B,WAA3B,EAAwCP,mBAAxC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAlB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAgB,IAAAA,CAAC,CAACG,cAAF;AACAb,IAAAA,WAAW,CAAC;AACVH,MAAAA,CAAC,EAAEa,CAAC,CAACP,KADK;AAEVL,MAAAA,CAAC,EAAEY,CAAC,CAACN;AAFK,KAAD,CAAX;AAKD,GATD;;AAWA,QAAMG,SAAS,GAAIG,CAAD,IAAO;AACrB;AACAhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAJD;;AAOA;AAAA;AACE;AACF;AAAO,MAAA,WAAW,EAAEe,WAApB;AAAiC,MAAA,SAAS,EAAEF,SAA5C;AAAuD,MAAA,KAAK,EAAE;AAACO,QAAAA,UAAU,EAAC,OAAZ;AAAqBC,QAAAA,SAAS,EAAGtB,SAAS,GAAG,gBAAcE,aAAa,CAACE,CAAd,GAAgBE,QAAQ,CAACF,CAAzB,GAA2B,EAAzC,IAA6C,KAA7C,IAAoDF,aAAa,CAACG,CAAd,GAAgBC,QAAQ,CAACD,CAAzB,GAA2B,EAA/E,IAAmF,IAAnF,GAAwF,GAA3F,GAAiG;AAA3I,OAA9D;AAAiN,MAAA,SAAS,EAAEL,SAAS,GAAG,gBAAH,GAAsB,SAA3P;AAAA,gBAAuQD,KAAK,CAACwB;AAA7Q;AAAA;AAAA;AAAA;AAAA,YAFA,CAGE;;AAHF;AAKD;;GA7CQzB,S;;KAAAA,S;AA+CT,eAAeA,SAAf","sourcesContent":["import './Draggable.css';\nimport {useState, useEffect} from 'react'\n\nfunction Draggable(props) {\n\n\n  const [postState, setPostState] = useState(false) \n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n  const [deltaPos, setDeltaPos] = useState({\n    x: null,\n    y: null,\n  })\n\n  const updateMousePosition = ev => {\n    setMousePosition({ x: ev.pageX, y: ev.pageY });\n    \n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition);\n    window.addEventListener(\"mouseup\",onMouseUp);\n    return () => window.removeEventListener(\"mousemove\", updateMousePosition);\n  }, []);\n\n\n  const onMouseDown = (e) => {\n    console.log('down')\n    setPostState(true)\n    e.preventDefault();\n    setDeltaPos({\n      x: e.pageX,\n      y: e.pageY\n    })\n    \n  }\n\n  const onMouseUp = (e) => {\n      // console.log('onMouseUp')\n      setPostState(false)\n           \n  }\n\n  \n  return (\n    // <div onMouseMove={postState ? onMouseMove : onMouseMove} onMouseUp={onMouseUp} className={postState ? 'wrap' : 'wrap'}>\n  <span  onMouseDown={onMouseDown} onMouseUp={onMouseUp} style={{transition:'0.05s', transform:  postState ? 'translate('+(mousePosition.x-deltaPos.x-10)+'px,'+(mousePosition.y-deltaPos.y-10)+'px'+')' : null}}  className={postState ? 'element active' : 'element'}>{props.children}</span>       \n    // </div>\n  );\n}\n\nexport default Draggable;\n"]},"metadata":{},"sourceType":"module"}