{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/DumbComponents/TaskSection/Tasks/Tasks.js\";\nimport React from 'react';\nimport Task from '../Task/Task';\nimport Filter from '../Filter/Filter';\nimport Input from '../Input/Input';\nimport PropTypes from 'prop-types';\nimport './Tasks.css';\n\nconst Tasks = props => {\n  const tasks = props.tasks.filter(item => item.category === props.cat);\n\n  const compl = id => {\n    const obj = queryString.parse(props.location.search);\n    console.log(obj);\n    props.complete(id);\n  };\n\n  const taskAdd = obj => {\n    props.taskAdd(obj);\n    console.log(tasks);\n  };\n\n  const del = id => {\n    props.del(id);\n  };\n\n  const prior = (id, priority) => {\n    props.prior(id, priority);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      loc: props.cat,\n      taskAdd: taskAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), tasks.map((item, key) => /*#__PURE__*/_jsxDEV(Task, {\n      del: del,\n      prior: prior,\n      compl: compl,\n      task: item\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 39\n    }, this)), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Tasks;\nTasks.propTypes = {\n  tasks: PropTypes.array,\n  taskAdd: PropTypes.func,\n  compl: PropTypes.func,\n  del: PropTypes.func\n};\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/DumbComponents/TaskSection/Tasks/Tasks.js"],"names":["React","Task","Filter","Input","PropTypes","Tasks","props","tasks","filter","item","category","cat","compl","id","obj","queryString","parse","location","search","console","log","complete","taskAdd","del","prior","priority","map","key","propTypes","array","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBJ,KAAK,CAACK,GAAnD,CAAd;;AAEA,QAAMC,KAAK,GAAIC,EAAD,IAAQ;AAClB,UAAMC,GAAG,GAAGC,WAAW,CAACC,KAAZ,CAAkBV,KAAK,CAACW,QAAN,CAAeC,MAAjC,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAR,IAAAA,KAAK,CAACe,QAAN,CAAeR,EAAf;AACH,GAJD;;AAMA,QAAMS,OAAO,GAAIR,GAAD,IAAS;AACrBR,IAAAA,KAAK,CAACgB,OAAN,CAAcR,GAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACH,GAHD;;AAKA,QAAMgB,GAAG,GAAIV,EAAD,IAAQ;AAChBP,IAAAA,KAAK,CAACiB,GAAN,CAAUV,EAAV;AACH,GAFD;;AAIA,QAAMW,KAAK,GAAG,CAACX,EAAD,EAAKY,QAAL,KAAkB;AAC5BnB,IAAAA,KAAK,CAACkB,KAAN,CAAYX,EAAZ,EAAgBY,QAAhB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEnB,KAAK,CAACK,GAAlB;AAAuB,MAAA,OAAO,EAAEW;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKf,KAAK,CAACmB,GAAN,CAAU,CAACjB,IAAD,EAAOkB,GAAP,kBAAe,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEJ,GAAX;AAAgB,MAAA,KAAK,EAAEC,KAAvB;AAA8B,MAAA,KAAK,EAAEZ,KAArC;AAA4C,MAAA,IAAI,EAAEH;AAAlD,OAA6DkB,GAA7D;AAAA;AAAA;AAAA;AAAA,YAAzB,CAFL,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7BD;;KAAMtB,K;AA+BNA,KAAK,CAACuB,SAAN,GAAkB;AACdrB,EAAAA,KAAK,EAAEH,SAAS,CAACyB,KADH;AAEdP,EAAAA,OAAO,EAAElB,SAAS,CAAC0B,IAFL;AAGdlB,EAAAA,KAAK,EAAER,SAAS,CAAC0B,IAHH;AAIdP,EAAAA,GAAG,EAAEnB,SAAS,CAAC0B;AAJD,CAAlB;AAOA,eAAezB,KAAf","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport Filter from '../Filter/Filter'\nimport Input from '../Input/Input'\nimport PropTypes from 'prop-types';\nimport './Tasks.css';\n\n\nconst Tasks = (props) => {\n    const tasks = props.tasks.filter(item => item.category === props.cat);\n\n    const compl = (id) => {\n        const obj = queryString.parse(props.location.search)\n        console.log(obj)\n        props.complete(id);\n    }\n\n    const taskAdd = (obj) => {\n        props.taskAdd(obj)\n        console.log(tasks)\n    }\n\n    const del = (id) => {\n        props.del(id);\n    }\n\n    const prior = (id, priority) => {\n        props.prior(id, priority)\n    }\n\n    return (\n        <div className='tasks'>\n            <Input loc={props.cat} taskAdd={taskAdd}/>\n            {tasks.map((item, key) => <Task del={del} prior={prior} compl={compl} task={item} key={key}/>)}\n            <Filter/>\n        </div>\n    )\n}\n\nTasks.propTypes = {\n    tasks: PropTypes.array,\n    taskAdd: PropTypes.func,\n    compl: PropTypes.func,\n    del: PropTypes.func\n};\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}