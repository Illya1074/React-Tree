{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/Layout.js\";\nimport React, { useState } from 'react';\nimport Tree from './Containers/Tree/Tree';\nconst tree = [{\n  id: '1',\n  route: 1,\n  title: 'item1',\n  icon: 'folder',\n  state: 'closed',\n  items: [{\n    id: '2',\n    route: 11,\n    title: 'item1.1',\n    icon: 'file',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 111,\n      title: 'item1.1.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }, {\n      id: '2',\n      route: 112,\n      title: 'item1.1.2',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }, {\n      id: '2',\n      route: 113,\n      title: 'item1.1.3',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '2.2',\n    route: 12,\n    title: 'item1.2',\n    icon: 'file',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 121,\n      title: 'item1.2.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }, {\n      id: '2',\n      route: 122,\n      title: 'item1.2.2',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }]\n}, {\n  id: '3',\n  route: 2,\n  title: 'item2',\n  icon: 'folder',\n  state: 'open',\n  items: [{\n    id: '2',\n    route: 21,\n    title: 'item2.1',\n    icon: 'file',\n    state: 'open',\n    items: []\n  }]\n}, {\n  id: '3',\n  route: 3,\n  title: 'item3',\n  icon: 'folder',\n  state: 'open',\n  items: [{\n    id: '2',\n    route: 31,\n    title: 'item3.1',\n    icon: 'file',\n    state: 'open',\n    items: []\n  }]\n}, {\n  id: '6',\n  route: 4,\n  title: 'item4',\n  icon: 'folder',\n  state: 'open',\n  items: [{\n    id: '2',\n    route: 41,\n    title: 'item4.1',\n    icon: 'file',\n    state: 'open',\n    items: []\n  }]\n}];\n\nconst Layout = ({\n  location\n}) => {\n  // const [tree,setTree] = useState([\n  //     {\n  //         id: '1',\n  //         title: 'item1', \n  //         icon: 'folder',\n  //         state: 'open',\n  //         items: [\n  //             {\n  //                 id: '2',\n  //                 title: 'item1.1',\n  //                 icon: 'file',\n  //                 state: 'open',\n  //                 items: [\n  //                     {\n  //                         id: '2',\n  //                         title: 'item1.1.1',\n  //                         icon: 'file',\n  //                         state: 'open',\n  //                         items: []\n  //                     },\n  //                     {\n  //                         id: '2',\n  //                         title: 'item1.1.2',\n  //                         icon: 'file',\n  //                         state: 'open',\n  //                         items: []\n  //                     }\n  //                 ]\n  //             }\n  //         ]\n  //     },\n  //     {\n  //         id: '3',\n  //         title: 'item3', \n  //         icon: 'folder',\n  //         state: 'open',\n  //         items: [\n  //             {\n  //                 id: '2',\n  //                 title: 'item3.1',\n  //                 icon: 'file',\n  //                 state: 'open',\n  //                 items: []\n  //             }\n  //         ]\n  //     }\n  // ])\n  const render = (tree, space) => {\n    tree.map(item => {\n      console.log(space + item.title);\n\n      if (item.items !== []) {\n        render(item.items, space + \" \");\n      }\n    }); // console.log(tree)\n  }; // render(tree, \" \");\n\n\n  const arr = ['hello', 'bye']; // console.log(obj);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      items: tree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Layout.js"],"names":["React","useState","Tree","tree","id","route","title","icon","state","items","Layout","location","render","space","map","item","console","log","arr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,IAAI,GAAG,CACT;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAC,CAFV;AAGIC,EAAAA,KAAK,EAAE,OAHX;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,KAAK,EAAE,QALX;AAMIC,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE,EAFX;AAGIC,IAAAA,KAAK,EAAE,SAHX;AAIIC,IAAAA,IAAI,EAAE,MAJV;AAKIC,IAAAA,KAAK,EAAE,MALX;AAMIC,IAAAA,KAAK,EAAE,CACH;AACIL,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,KAAK,EAAE,GAFX;AAGIC,MAAAA,KAAK,EAAE,WAHX;AAIIC,MAAAA,IAAI,EAAE,MAJV;AAKIC,MAAAA,KAAK,EAAE,MALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KADG,EASH;AACIL,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,KAAK,EAAE,GAFX;AAGIC,MAAAA,KAAK,EAAE,WAHX;AAIIC,MAAAA,IAAI,EAAE,MAJV;AAKIC,MAAAA,KAAK,EAAE,MALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KATG,EAiBH;AACIL,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,KAAK,EAAE,GAFX;AAGIC,MAAAA,KAAK,EAAE,WAHX;AAIIC,MAAAA,IAAI,EAAE,MAJV;AAKIC,MAAAA,KAAK,EAAE,MALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KAjBG;AANX,GADG,EAkCH;AACEL,IAAAA,EAAE,EAAE,KADN;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,KAAK,EAAE,MALT;AAMEC,IAAAA,KAAK,EAAE,CACH;AACIL,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,KAAK,EAAE,GAFX;AAGIC,MAAAA,KAAK,EAAE,WAHX;AAIIC,MAAAA,IAAI,EAAE,MAJV;AAKIC,MAAAA,KAAK,EAAE,MALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KADG,EASH;AACIL,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,KAAK,EAAE,GAFX;AAGIC,MAAAA,KAAK,EAAE,WAHX;AAIIC,MAAAA,IAAI,EAAE,MAJV;AAKIC,MAAAA,KAAK,EAAE,MALX;AAMIC,MAAAA,KAAK,EAAE;AANX,KATG;AANT,GAlCG;AANX,CADS,EAoET;AACIL,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,CAFX;AAGIC,EAAAA,KAAK,EAAE,OAHX;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,KAAK,EAAE,MALX;AAMIC,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE,EAFX;AAGIC,IAAAA,KAAK,EAAE,SAHX;AAIIC,IAAAA,IAAI,EAAE,MAJV;AAKIC,IAAAA,KAAK,EAAE,MALX;AAMIC,IAAAA,KAAK,EAAE;AANX,GADG;AANX,CApES,EAqFT;AACIL,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,CAFX;AAGIC,EAAAA,KAAK,EAAE,OAHX;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,KAAK,EAAE,MALX;AAMIC,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE,EAFX;AAGIC,IAAAA,KAAK,EAAE,SAHX;AAIIC,IAAAA,IAAI,EAAE,MAJV;AAKIC,IAAAA,KAAK,EAAE,MALX;AAMIC,IAAAA,KAAK,EAAE;AANX,GADG;AANX,CArFS,EAsGT;AACIL,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,CAFX;AAGIC,EAAAA,KAAK,EAAE,OAHX;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,KAAK,EAAE,MALX;AAMIC,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE,EAFX;AAGIC,IAAAA,KAAK,EAAE,SAHX;AAIIC,IAAAA,IAAI,EAAE,MAJV;AAKIC,IAAAA,KAAK,EAAE,MALX;AAMIC,IAAAA,KAAK,EAAE;AANX,GADG;AANX,CAtGS,CAAb;;AAyHA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAI3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,CAACT,IAAD,EAAOU,KAAP,KAAiB;AAC5BV,IAAAA,IAAI,CAACW,GAAL,CAAUC,IAAD,IAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,GAAGE,IAAI,CAACT,KAAzB;;AACA,UAAGS,IAAI,CAACN,KAAL,KAAe,EAAlB,EAAqB;AACjBG,QAAAA,MAAM,CAACG,IAAI,CAACN,KAAN,EAAaI,KAAK,GAAC,GAAnB,CAAN;AACH;AACJ,KALD,EAD4B,CAO5B;AACH,GARD,CApD2B,CA8D3B;;;AAEA,QAAMK,GAAG,GAAG,CAAC,OAAD,EAAU,KAAV,CAAZ,CAhE2B,CAoE3B;;AAEA,sBAEI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEf;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBAFJ;AAUH,CAhFD;;KAAMO,M;AAkFN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport Tree from './Containers/Tree/Tree'\n\nconst tree = [\n    {\n        id: '1',\n        route:1,\n        title: 'item1', \n        icon: 'folder',\n        state: 'closed',\n        items: [\n            {\n                id: '2',\n                route: 11,\n                title: 'item1.1',\n                icon: 'file',\n                state: 'open',\n                items: [\n                    {\n                        id: '2',\n                        route: 111,\n                        title: 'item1.1.1',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    },\n                    {\n                        id: '2',\n                        route: 112,\n                        title: 'item1.1.2',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    },\n                    {\n                        id: '2',\n                        route: 113,\n                        title: 'item1.1.3',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    }\n                ]\n            },\n            {\n              id: '2.2',\n              route: 12,\n              title: 'item1.2',\n              icon: 'file',\n              state: 'open',\n              items: [\n                  {\n                      id: '2',\n                      route: 121,\n                      title: 'item1.2.1',\n                      icon: 'file',\n                      state: 'open',\n                      items: []\n                  },\n                  {\n                      id: '2',\n                      route: 122,\n                      title: 'item1.2.2',\n                      icon: 'file',\n                      state: 'open',\n                      items: []\n                  }\n              ]\n          }\n        ]\n    },\n    {\n        id: '3',\n        route: 2,\n        title: 'item2', \n        icon: 'folder',\n        state: 'open',\n        items: [\n            {\n                id: '2',\n                route: 21,\n                title: 'item2.1',\n                icon: 'file',\n                state: 'open',\n                items: []\n            }\n        ]\n    },\n    {\n        id: '3',\n        route: 3,\n        title: 'item3', \n        icon: 'folder',\n        state: 'open',\n        items: [\n            {\n                id: '2',\n                route: 31,\n                title: 'item3.1',\n                icon: 'file',\n                state: 'open',\n                items: []\n            }\n        ]\n    },\n    {\n        id: '6',\n        route: 4,\n        title: 'item4', \n        icon: 'folder',\n        state: 'open',\n        items: [\n            {\n                id: '2',\n                route: 41,\n                title: 'item4.1',\n                icon: 'file',\n                state: 'open',\n                items: []\n            }\n        ]\n    }\n];\n\nconst Layout = ({location}) => {\n    \n    \n\n    // const [tree,setTree] = useState([\n    //     {\n    //         id: '1',\n    //         title: 'item1', \n    //         icon: 'folder',\n    //         state: 'open',\n    //         items: [\n    //             {\n    //                 id: '2',\n    //                 title: 'item1.1',\n    //                 icon: 'file',\n    //                 state: 'open',\n    //                 items: [\n    //                     {\n    //                         id: '2',\n    //                         title: 'item1.1.1',\n    //                         icon: 'file',\n    //                         state: 'open',\n    //                         items: []\n    //                     },\n    //                     {\n    //                         id: '2',\n    //                         title: 'item1.1.2',\n    //                         icon: 'file',\n    //                         state: 'open',\n    //                         items: []\n    //                     }\n    //                 ]\n    //             }\n    //         ]\n    //     },\n    //     {\n    //         id: '3',\n    //         title: 'item3', \n    //         icon: 'folder',\n    //         state: 'open',\n    //         items: [\n    //             {\n    //                 id: '2',\n    //                 title: 'item3.1',\n    //                 icon: 'file',\n    //                 state: 'open',\n    //                 items: []\n    //             }\n    //         ]\n    //     }\n    // ])\n\n    const render = (tree, space) => {\n        tree.map((item) => {\n            console.log(space + item.title);\n            if(item.items !== []){\n                render(item.items, space+\" \");\n            }\n        } )\n        // console.log(tree)\n    }\n\n    // render(tree, \" \");\n\n    const arr = ['hello', 'bye']\n\n    \n\n    // console.log(obj);\n\n    return (\n        \n        <>\n            <Tree items={tree}/>\n            {/* {\n                tree.map(item => <h1>{item.title}</h1>)\n            } */}\n\n        </>\n    )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}