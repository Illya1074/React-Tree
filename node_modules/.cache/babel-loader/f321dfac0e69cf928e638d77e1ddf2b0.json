{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Circle/Circle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport './Circle.css';\n\nconst Circle = ({\n  isDragging,\n  myDispatch\n}) => {\n  _s();\n\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [draggable, setDraggable] = useState(false);\n\n  const onStop = (e, i) => {\n    console.log(e); // myDispatch()\n\n    isDragging(false);\n    setDraggable(false);\n  };\n\n  const onStart = () => {\n    isDragging(true);\n    setDraggable(true);\n  };\n\n  const fun = () => {\n    console.log('dispatch'); // dispatchFun();\n  };\n\n  function handleDrag(event) {\n    console.log('react SyntheticEvent ==> ', event);\n    console.log('nativeEvent ==> ', event.nativeEvent);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    onStart: onStart,\n    onStop: onStop,\n    position: {\n      x: 0,\n      y: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      draggable: \"true\",\n      onDragStart: onStart,\n      onDragEnd: onStop,\n      style: {\n        opacity: draggable ? '0.4' : '1'\n      },\n      children: \"\\u25C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), \"// \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Circle, \"VspJtygVSoJbt/d+KxSgEjPwJKo=\");\n\n_c = Circle;\nexport default Circle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Circle\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Circle/Circle.js"],"names":["React","useState","Draggable","Circle","isDragging","myDispatch","pos","setPos","x","y","draggable","setDraggable","onStop","e","i","console","log","onStart","fun","handleDrag","event","nativeEvent","opacity"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAAA;;AAIzC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC;AAC3BO,IAAAA,CAAC,EAAE,CADwB;AACrBC,IAAAA,CAAC,EAAE;AADkB,GAAD,CAA9B;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAGA,QAAMW,MAAM,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ,EADqB,CAErB;;AACAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAND;;AAQA,QAAMM,OAAO,GAAG,MAAM;AAClBb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAGH,GALD;;AAOA,QAAMO,GAAG,GAAG,MAAM;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADc,CAEd;AACH,GAHD;;AAKA,WAASG,UAAT,CAAoBC,KAApB,EAA2B;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCI,KAAzC;AACFL,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,KAAK,CAACC,WAAtC;AACD;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ,OAApB;AAA6B,IAAA,MAAM,EAAEL,MAArC;AAA6C,IAAA,QAAQ,EAAE;AAACJ,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAAvD;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,WAAW,EAAEQ,OAAtD;AAA+D,MAAA,SAAS,EAAEL,MAA1E;AAAmF,MAAA,KAAK,EAAE;AAACU,QAAAA,OAAO,EAAEZ,SAAS,GAAG,KAAH,GAAW;AAA9B,OAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3CD;;GAAMP,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport Draggable from 'react-draggable';\nimport './Circle.css';\n\nconst Circle = ({isDragging, myDispatch}) => {\n    \n    \n\n    const [pos, setPos] = useState({\n        x: 0, y: 0\n    })\n    const [draggable, setDraggable] = useState(false);\n\n\n    const onStop = (e, i) => {\n        console.log(e)\n        // myDispatch()\n        isDragging(false)\n        setDraggable(false)\n    \n    }\n\n    const onStart = () => {\n        isDragging(true)\n        setDraggable(true)\n        \n       \n    }\n\n    const fun = () => {\n        console.log('dispatch')\n        // dispatchFun();\n    }\n\n    function handleDrag(event) {\n        console.log('react SyntheticEvent ==> ', event);\n      console.log('nativeEvent ==> ', event.nativeEvent);\n    }\n\n    return (\n        <Draggable onStart={onStart} onStop={onStop} position={{x: 0, y: 0}}>\n                <div className='circle' draggable=\"true\" onDragStart={onStart} onDragEnd={onStop}  style={{opacity: draggable ? '0.4' : '1'}}>\n                    â—‰\n                </div>\n        // </Draggable>\n        \n    )\n}\n\nexport default Circle\n"]},"metadata":{},"sourceType":"module"}