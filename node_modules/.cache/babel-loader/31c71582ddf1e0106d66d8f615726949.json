{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst Tree = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n  const [tree, setTree] = useState([{\n    id: '1',\n    route: 1,\n    title: 'item1',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 11,\n      title: 'item1.1',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 111,\n        title: 'item1.1.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 112,\n        title: 'item1.1.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 113,\n        title: 'item1.1.3',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }, {\n      id: '2.2',\n      route: 12,\n      title: 'item1.2',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 121,\n        title: 'item1.2.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 122,\n        title: 'item1.2.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }]\n  }, {\n    id: '3',\n    route: '3',\n    title: 'item3',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: '3.1',\n      title: 'item3.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '6',\n    route: '4',\n    title: 'item4',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: '4.1',\n      title: 'item4.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }]);\n\n  const render = (tree, state = []) => {\n    let arr = state;\n    tree.map(item => {\n      arr = [...arr, item.title];\n      console.log(item.title, arr);\n\n      if (item.items !== []) {\n        render(item.items, arr);\n      }\n    }); // return state;  \n    // console.log(tree)\n  };\n\n  const renderTree = (tree, state = [1]) => {\n    let route = state;\n\n    if (tree.route === route[route.length - 1]) {\n      route.push(route[route.length - 1] * 10 + 1);\n      console.log(tree.route, route);\n      renderTree(tree.route, route);\n    } else if (tree.route === route[route.length - 1] + 1) {\n      route[route.length - 1] = route[route.length - 1] + 1;\n      console.log(tree.route, route);\n      renderTree(tree.route, route);\n    } else if (route.length !== 0) {\n      route.pop();\n      console.log(tree.route, route);\n      renderTree(tree.route, route);\n    } else {\n      return state;\n    }\n  };\n\n  console.log(renderTree(tree)); // console.log(render(tree))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tree, \"W5H6ZvwU+OZ0hSUH+3PbuQKiHcc=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","useState","Tree","state","setState","tree","setTree","id","route","title","icon","items","render","arr","map","item","console","log","renderTree","length","push","pop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst Tree = () => {\n    const [state, setState] = useState([]); \n    const [tree,setTree] = useState([\n      {\n          id: '1',\n          route:1,\n          title: 'item1', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 11,\n                  title: 'item1.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: [\n                      {\n                          id: '2',\n                          route: 111,\n                          title: 'item1.1.1',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 112,\n                          title: 'item1.1.2',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 113,\n                          title: 'item1.1.3',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      }\n                  ]\n              },\n              {\n                id: '2.2',\n                route: 12,\n                title: 'item1.2',\n                icon: 'file',\n                state: 'open',\n                items: [\n                    {\n                        id: '2',\n                        route: 121,\n                        title: 'item1.2.1',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    },\n                    {\n                        id: '2',\n                        route: 122,\n                        title: 'item1.2.2',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    }\n                ]\n            }\n          ]\n      },\n      {\n          id: '3',\n          route: '3',\n          title: 'item3', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: '3.1',\n                  title: 'item3.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      },\n      {\n          id: '6',\n          route: '4',\n          title: 'item4', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: '4.1',\n                  title: 'item4.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      }\n    ])\n    \n\n    const render = (tree, state=[]) => {\n      let arr = state;\n      tree.map((item) => {\n          arr = [...arr, item.title] \n          console.log(item.title, arr);\n          \n          if(item.items !== []){\n              render(item.items, arr);\n          }          \n      } )\n      // return state;  \n      // console.log(tree)\n    }\n    \n    const renderTree = (tree, state=[1]) => {\n        let route = state;\n        if(tree.route === route[route.length-1]){\n          route.push(route[route.length-1]*10+1)\n          console.log(tree.route, route)\n          renderTree(tree.route, route)\n        } else if(tree.route === route[route.length-1]+1){\n          route[route.length-1]=route[route.length-1]+1;\n          console.log(tree.route, route)\n          renderTree(tree.route, route);\n        } else if(route.length !== 0) {\n          route.pop();\n          console.log(tree.route, route)\n          renderTree(tree.route, route);\n        } else {\n          return state;\n        }\n    }\n\n    console.log(renderTree(tree))\n    // console.log(render(tree))\n\n  return (\n    <div>\n    </div>\n  )\n}\n\nexport default Tree\n"]},"metadata":{},"sourceType":"module"}