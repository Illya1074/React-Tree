{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Tree from './Containers/Tree/Tree';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openAndCloseNode, addNode, deleteNode, editTitle } from './Actions/index';\nimport ContentEditable from 'react-contenteditable';\n\nconst Layout = () => {\n  _s();\n\n  const tree = useSelector(state => state.tree);\n  const dispatch = useDispatch();\n  const text = useRef('Hello');\n\n  const handleChange = evt => {\n    text.current = evt.target.value;\n  };\n\n  const handleBlur = () => {\n    console.log(text.current);\n  };\n\n  const openAndCloseNodeFun = id => {\n    dispatch(openAndCloseNode(id)); // console.log(id)\n  };\n\n  const addNodeFun = id => {\n    dispatch(addNode(id));\n  };\n\n  const deleteNodeFun = id => {\n    dispatch(deleteNode(id));\n  };\n\n  const editTitleFun = id => {\n    dispatch(editTitle(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n      html: text.current,\n      onBlur: handleBlur,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      openNode: openAndCloseNodeFun,\n      addNode: addNodeFun,\n      items: tree,\n      deleteNodeFun: deleteNodeFun,\n      editTitle: editTitleFun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Layout, \"5HG14+7Z4s3D+6SvMeR+Tz3WUWo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Layout.js"],"names":["React","useState","useRef","Tree","useSelector","useDispatch","openAndCloseNode","addNode","deleteNode","editTitle","ContentEditable","Layout","tree","state","dispatch","text","handleChange","evt","current","target","value","handleBlur","console","log","openAndCloseNodeFun","id","addNodeFun","deleteNodeFun","editTitleFun"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,gBAAR,EAA0BC,OAA1B,EAAmCC,UAAnC,EAA+CC,SAA/C,QAA+D,iBAA/D;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGb,MAAM,CAAC,OAAD,CAAnB;;AAEA,QAAMc,YAAY,GAAGC,GAAG,IAAI;AACxBF,IAAAA,IAAI,CAACG,OAAL,GAAeD,GAAG,CAACE,MAAJ,CAAWC,KAA1B;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACG,OAAjB;AACH,GAFD;;AAIA,QAAMM,mBAAmB,GAAIC,EAAD,IAAQ;AAChCX,IAAAA,QAAQ,CAACR,gBAAgB,CAACmB,EAAD,CAAjB,CAAR,CADgC,CAEhC;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAID,EAAD,IAAQ;AACvBX,IAAAA,QAAQ,CAACP,OAAO,CAACkB,EAAD,CAAR,CAAR;AACH,GAFD;;AAIA,QAAME,aAAa,GAAIF,EAAD,IAAQ;AAC1BX,IAAAA,QAAQ,CAACN,UAAU,CAACiB,EAAD,CAAX,CAAR;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAIH,EAAD,IAAQ;AACzBX,IAAAA,QAAQ,CAACL,SAAS,CAACgB,EAAD,CAAV,CAAR;AACH,GAFD;;AAIA,sBAEI;AAAA,4BAEI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEV,IAAI,CAACG,OAA5B;AAAqC,MAAA,MAAM,EAAEG,UAA7C;AAAyD,MAAA,QAAQ,EAAEL;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEQ,mBAAhB;AAAqC,MAAA,OAAO,EAAEE,UAA9C;AAA0D,MAAA,KAAK,EAAEd,IAAjE;AAAuE,MAAA,aAAa,EAAEe,aAAtF;AAAqG,MAAA,SAAS,EAAEC;AAAhH;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBAFJ;AAQH,CAtCD;;GAAMjB,M;UACWP,W,EACIC,W;;;KAFfM,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React, {useState, useRef} from 'react'\nimport Tree from './Containers/Tree/Tree'\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {openAndCloseNode, addNode, deleteNode, editTitle} from './Actions/index' \nimport ContentEditable from 'react-contenteditable'\n\n\nconst Layout = () => {\n    const tree = useSelector(state => state.tree)\n    const dispatch = useDispatch();\n    const text = useRef('Hello');\n\n    const handleChange = evt => {\n        text.current = evt.target.value;\n    };\n     \n    const handleBlur = () => {\n        console.log(text.current);\n    };\n\n    const openAndCloseNodeFun = (id) => {\n        dispatch(openAndCloseNode(id));\n        // console.log(id)\n    }\n\n    const addNodeFun = (id) => {\n        dispatch(addNode(id));\n    }\n\n    const deleteNodeFun = (id) => {\n        dispatch(deleteNode(id))\n    }\n\n    const editTitleFun = (id) => {\n        dispatch(editTitle(id))\n    }\n\n    return (\n        \n        <>\n            {/* <ContentEditable html={'Okey'} onBlur={handleBlur} onChange={(evt)=>} /> */}\n            <ContentEditable html={text.current} onBlur={handleBlur} onChange={handleChange} />\n            <Tree openNode={openAndCloseNodeFun} addNode={addNodeFun} items={tree} deleteNodeFun={deleteNodeFun} editTitle={editTitleFun}/>\n        </>\n    )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}