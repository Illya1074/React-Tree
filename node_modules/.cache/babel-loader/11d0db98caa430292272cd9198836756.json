{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Circle/Circle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport './Circle.css';\n\nconst Circle = ({\n  isDragging,\n  myDispatch\n}) => {\n  _s();\n\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [draggable, setDraggable] = useState(false);\n\n  const onStop = (e, i) => {\n    myDispatch();\n    isDragging(false);\n    setDraggable(false);\n  };\n\n  const onStart = () => {\n    isDragging(true);\n    setDraggable(true);\n  };\n\n  const fun = () => {\n    console.log('dispatch'); // dispatchFun();\n  };\n\n  function handleDrag(event) {\n    console.log('react SyntheticEvent ==> ', event);\n    console.log('nativeEvent ==> ', event.nativeEvent);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Draggable onStart={onStart} onStop={onStop}>\n    _jsxDEV(\"div\", {\n      className: \"circle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: \"true\",\n        onDragStart: onStart,\n        onDragEnd: onStop,\n        style: {\n          position: 'absolute',\n          display: draggable ? 'none' : 'block'\n        },\n        children: \"\\u25C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) // </Draggable>\n\n  );\n};\n\n_s(Circle, \"VspJtygVSoJbt/d+KxSgEjPwJKo=\");\n\n_c = Circle;\nexport default Circle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Circle\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Circle/Circle.js"],"names":["React","useState","Draggable","Circle","isDragging","myDispatch","pos","setPos","x","y","draggable","setDraggable","onStop","e","i","onStart","fun","console","log","handleDrag","event","nativeEvent","position","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAAA;;AAIzC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC;AAC3BO,IAAAA,CAAC,EAAE,CADwB;AACrBC,IAAAA,CAAC,EAAE;AADkB,GAAD,CAA9B;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAIA,QAAMW,MAAM,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAErBT,IAAAA,UAAU;AACVD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAND;;AAQA,QAAMI,OAAO,GAAG,MAAM;AAClBX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAGH,GALD;;AAOA,QAAMK,GAAG,GAAG,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADc,CAEd;AACH,GAHD;;AAKA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;AACFH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,KAAK,CAACC,WAAtC;AACD;;AAED;AAAA;AACI;AACI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,WAAW,EAAEN,OAAnC;AAA4C,QAAA,SAAS,EAAEH,MAAvD;AAAgE,QAAA,KAAK,EAAE;AACtEU,UAAAA,QAAQ,EAAE,UAD4D;AAChDC,UAAAA,OAAO,EAAEb,SAAS,GAAG,MAAH,GAAY;AADkB,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,CAQI;;AARJ;AAWH,CA/CD;;GAAMP,M;;KAAAA,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport Draggable from 'react-draggable';\nimport './Circle.css';\n\nconst Circle = ({isDragging, myDispatch}) => {\n    \n    \n\n    const [pos, setPos] = useState({\n        x: 0, y: 0\n    })\n    const [draggable, setDraggable] = useState(false);\n\n    \n\n    const onStop = (e, i) => {\n    \n        myDispatch()\n        isDragging(false)\n        setDraggable(false)\n    \n    }\n\n    const onStart = () => {\n        isDragging(true)\n        setDraggable(true)\n        \n       \n    }\n\n    const fun = () => {\n        console.log('dispatch')\n        // dispatchFun();\n    }\n\n    function handleDrag(event) {\n        console.log('react SyntheticEvent ==> ', event);\n      console.log('nativeEvent ==> ', event.nativeEvent);\n    }\n\n    return (\n        // <Draggable onStart={onStart} onStop={onStop}>\n            <div  className='circle' >\n                <div draggable=\"true\" onDragStart={onStart} onDragEnd={onStop}  style={{\n                 position: 'absolute', display: draggable ? 'none' : 'block'}}>\n                    â—‰\n                </div>\n            </div>\n        // </Draggable>\n        \n    )\n}\n\nexport default Circle\n"]},"metadata":{},"sourceType":"module"}