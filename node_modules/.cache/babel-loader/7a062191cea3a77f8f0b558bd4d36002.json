{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/Pages/Tree/Tree.js\";\nimport TreeItem from '../TreeItem/TreeItem';\n\nconst Tree = ({\n  items,\n  eventDispatcher,\n  myLastNode,\n  myDispatch,\n  myNodes,\n  isDragging,\n  isDraggingVal\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((i, key) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i,\n    myLastNode: myLastNode,\n    myDispatch: myDispatch,\n    eventDispatcher: eventDispatcher,\n    isDragging: isDragging,\n    isDraggingVal: isDraggingVal,\n    myNodes: myNodes\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 28\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 104\n}, this);\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Pages/Tree/Tree.js"],"names":["TreeItem","Tree","items","eventDispatcher","myLastNode","myDispatch","myNodes","isDragging","isDraggingVal","map","i","key"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,eAAR;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA,UAArC;AAAiDC,EAAAA,OAAjD;AAA0DC,EAAAA,UAA1D;AAAsEC,EAAAA;AAAtE,CAAD,kBAA0F;AAAA,YAClGN,KAAK,CAACO,GAAN,CAAU,CAACC,CAAD,EAAIC,GAAJ,kBAAY,QAAC,QAAD;AAAoB,IAAA,IAAI,EAAED,CAA1B;AAA6B,IAAA,UAAU,EAAEN,UAAzC;AAAqD,IAAA,UAAU,EAAEC,UAAjE;AAA6E,IAAA,eAAe,EAAEF,eAA9F;AACvB,IAAA,UAAU,EAAEI,UADW;AACC,IAAA,aAAa,EAAEC,aADhB;AAC+B,IAAA,OAAO,EAAEF;AADxC,KAAeK,GAAf;AAAA;AAAA;AAAA;AAAA,UAAtB;AADkG;AAAA;AAAA;AAAA;AAAA,QAAvG;;KAAMV,I;AAMN,eAAeA,IAAf","sourcesContent":["import TreeItem from '../TreeItem/TreeItem'\n\nconst Tree = ({items, eventDispatcher, myLastNode, myDispatch, myNodes, isDragging, isDraggingVal}) => <div>\n    {items.map((i, key) => <TreeItem key={key} item={i} myLastNode={myLastNode} myDispatch={myDispatch} eventDispatcher={eventDispatcher} \n    isDragging={isDragging} isDraggingVal={isDraggingVal} myNodes={myNodes}/>)}    \n</div>\n\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}