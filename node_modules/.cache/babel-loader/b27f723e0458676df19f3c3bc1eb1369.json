{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst TreeOld = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n  const tree = [{\n    id: '1',\n    route: 1,\n    title: 'item1',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 11,\n      title: 'item1.1',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 111,\n        title: 'item1.1.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 112,\n        title: 'item1.1.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 113,\n        title: 'item1.1.3',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }, {\n      id: '2.2',\n      route: 12,\n      title: 'item1.2',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        route: 121,\n        title: 'item1.2.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        route: 122,\n        title: 'item1.2.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }]\n  }, {\n    id: '3',\n    route: 2,\n    title: 'item2',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 21,\n      title: 'item2.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '3',\n    route: 3,\n    title: 'item3',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 31,\n      title: 'item3.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }, {\n    id: '6',\n    route: 4,\n    title: 'item4',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      route: 41,\n      title: 'item4.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }]; // const render = (tree, state=[], space=' ') => {\n  //     let arr = state;\n  //     tree.map((item) => {\n  //         arr = [...arr, item.title] \n  //         console.log(item.title, arr);\n  //         if(item.items !== []){\n  //             render(item.items, arr, space + ' ');\n  //         }          \n  //     } )\n  // }\n\n  const render = (tree, state = [], space = 0) => {\n    // console.log(tree[0].title);\n    let arr = state; // console.log(space)\n\n    for (let i = 0, length = tree.length; i < length; i++) {\n      // console.log(tree[i].title, space);\n      arr.push({\n        title: tree[i].title,\n        space: space\n      });\n\n      if (tree[i].items !== []) {\n        render(tree[i].items, arr, space + 1);\n      } // space--;    \n\n    }\n\n    return state;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render(tree).map((item, i) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        paddingLeft: item.space * 30 + 'px'\n      },\n      children: item.title\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TreeOld, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\n\n_c = TreeOld;\n\nconst TreeItem = ({\n  item\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [item.title, item.items && item.state == 'open' ? /*#__PURE__*/_jsxDEV(Tree, {\n    items: item.items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 43\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 167,\n  columnNumber: 30\n}, this);\n\n_c2 = TreeItem;\n\nconst Tree = ({\n  items\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((i, key) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 28\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 172,\n  columnNumber: 27\n}, this);\n\n_c3 = Tree;\nexport default Tree;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TreeOld\");\n$RefreshReg$(_c2, \"TreeItem\");\n$RefreshReg$(_c3, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","useState","TreeOld","state","setState","tree","id","route","title","icon","items","render","space","arr","i","length","push","map","item","paddingLeft","TreeItem","Tree","key"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst TreeOld = () => {\n    const [state, setState] = useState([]); \n    const tree = [\n      {\n          id: '1',\n          route:1,\n          title: 'item1', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 11,\n                  title: 'item1.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: [\n                      {\n                          id: '2',\n                          route: 111,\n                          title: 'item1.1.1',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 112,\n                          title: 'item1.1.2',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      },\n                      {\n                          id: '2',\n                          route: 113,\n                          title: 'item1.1.3',\n                          icon: 'file',\n                          state: 'open',\n                          items: []\n                      }\n                  ]\n              },\n              {\n                id: '2.2',\n                route: 12,\n                title: 'item1.2',\n                icon: 'file',\n                state: 'open',\n                items: [\n                    {\n                        id: '2',\n                        route: 121,\n                        title: 'item1.2.1',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    },\n                    {\n                        id: '2',\n                        route: 122,\n                        title: 'item1.2.2',\n                        icon: 'file',\n                        state: 'open',\n                        items: []\n                    }\n                ]\n            }\n          ]\n      },\n      {\n          id: '3',\n          route: 2,\n          title: 'item2', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 21,\n                  title: 'item2.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      },\n      {\n          id: '3',\n          route: 3,\n          title: 'item3', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 31,\n                  title: 'item3.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      },\n      {\n          id: '6',\n          route: 4,\n          title: 'item4', \n          icon: 'folder',\n          state: 'open',\n          items: [\n              {\n                  id: '2',\n                  route: 41,\n                  title: 'item4.1',\n                  icon: 'file',\n                  state: 'open',\n                  items: []\n              }\n          ]\n      }\n    ]\n    \n\n\n    // const render = (tree, state=[], space=' ') => {\n    //     let arr = state;\n    //     tree.map((item) => {\n    //         arr = [...arr, item.title] \n    //         console.log(item.title, arr);\n            \n    //         if(item.items !== []){\n    //             render(item.items, arr, space + ' ');\n    //         }          \n    //     } )\n    // }\n\n    const render = (tree, state=[], space=0) => {\n      \n        // console.log(tree[0].title);\n        let arr = state;\n        // console.log(space)\n        for (let i = 0, length = tree.length; i < length; i++) {\n            // console.log(tree[i].title, space);\n            arr.push({\n                title: tree[i].title,\n                space: space\n            })\n            if(tree[i].items !== []){\n                render(tree[i].items, arr, space+1);\n            }\n            // space--;    \n        }        \n      return state;        \n    }\n        \n  return (\n    <div>\n        {render(tree).map((item,i) => <h1 style = {{paddingLeft:item.space*30+'px'}} key={i}>{item.title}</h1>)}\n    </div>\n  )\n}\n\n\nconst TreeItem = ({item}) => <div>\n    {item.title}\n    {item.items && item.state == 'open' ? <Tree items={item.items}/> : null}\n</div>\n\nconst Tree = ({items}) => <div>\n    {items.map((i, key) => <TreeItem key={key} item={i}/>)}    \n</div>\n\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}