{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/illia/addnote/front/src/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyNavbar from './DumbComponents/Navbar/MyNavbar';\nimport Sidebar from './DumbComponents/Sidebar/Sidebar';\nimport Tasks from './DumbComponents/TaskSection/Tasks/Tasks';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { complete, addTask, deleteTask, priorTask, catAdd } from './Actions/index';\nimport { Switch, Route } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport TaskItem from './Containers/TaskItem/TaskItem';\n\nconst Layout = ({\n  location\n}) => {\n  _s();\n\n  const tasks = useSelector(state => state.tasks);\n  const categories = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n  const params = queryString.parse(location.search);\n\n  const com = id => {\n    // console.log(params)\n    dispatch(complete(id));\n  };\n\n  const taskAdd = obj => {\n    dispatch(addTask(obj));\n  };\n\n  const del = id => {\n    dispatch(deleteTask(id));\n  };\n\n  const prior = (id, priority) => {\n    dispatch(priorTask(id, priority));\n  };\n\n  const categoryAdd = cat => {\n    // console.log(categories)\n    dispatch(catAdd(cat));\n  }; /////////////////////////////////////////////////\n  // console.log(tasks);\n  // const state = {\n  //     books: { \n  //         drama, \n  //         commedies, \n  //         {sciencefiction:{\n  //             harry potter,\n  //             lord of the ring,\n  //             star wars\n  //         }}\n  //     }\n  // };\n\n\n  const tree = [{\n    id: '1',\n    title: 'item1',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      title: 'item1.1',\n      icon: 'file',\n      state: 'open',\n      items: [{\n        id: '2',\n        title: 'item1.1.1',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }, {\n        id: '2',\n        title: 'item1.1.2',\n        icon: 'file',\n        state: 'open',\n        items: []\n      }]\n    }]\n  }, {\n    id: '3',\n    title: 'item3',\n    icon: 'folder',\n    state: 'open',\n    items: [{\n      id: '2',\n      title: 'item3.1',\n      icon: 'file',\n      state: 'open',\n      items: []\n    }]\n  }];\n\n  const render = (tree, space) => {\n    tree.map(item => {\n      console.log(space + item.title);\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }, this);\n\n      if (item.items !== []) {\n        render(item.items, space + \" \");\n      }\n    }); // console.log(tree)\n  };\n\n  render(tree, \" \"); // console.log(obj);\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <MyNavbar/>            \n    //     <Sidebar categAdd={categoryAdd} cats={categories}/>\n    //     <Switch>\n    //         {/* {categories.map((item,i) => ( */}\n    //             <Route  path={'/'}>\n    //                 <Tasks location={location}  prior={prior} del={del} taskAdd={taskAdd} complete={com} tasks={tasks}/>\n    //             </Route>\n    //         {/* ))} */}\n    //     </Switch>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TaskItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"render\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_s(Layout, \"PLIV1tmAPAbFnno3wcG1BKs7N1I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Layout.js"],"names":["React","useState","MyNavbar","Sidebar","Tasks","useSelector","useDispatch","complete","addTask","deleteTask","priorTask","catAdd","Switch","Route","queryString","TaskItem","Layout","location","tasks","state","categories","dispatch","params","parse","search","com","id","taskAdd","obj","del","prior","priority","categoryAdd","cat","tree","title","icon","items","render","space","map","item","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport MyNavbar from './DumbComponents/Navbar/MyNavbar'\nimport Sidebar from './DumbComponents/Sidebar/Sidebar'\nimport Tasks from './DumbComponents/TaskSection/Tasks/Tasks'\nimport { useSelector } from 'react-redux'\nimport {useDispatch} from 'react-redux';\nimport {complete, addTask, deleteTask, priorTask, catAdd} from './Actions/index';\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport queryString from 'query-string'\n\nimport TaskItem from './Containers/TaskItem/TaskItem'\n\nconst Layout = ({location}) => {\n    \n    const tasks = useSelector(state => state.tasks);\n    const categories = useSelector(state => state.categories);\n    const dispatch = useDispatch();\n    const params = queryString.parse(location.search)\n\n    const com = (id) => {\n        // console.log(params)\n        dispatch(complete(id))\n    }\n\n    const taskAdd = (obj) => {\n        dispatch(addTask(obj))\n    }\n\n    const del = (id) => {\n        dispatch(deleteTask(id));\n    }\n\n    const prior = (id, priority) => {\n        dispatch(priorTask(id, priority))\n    }\n\n    const categoryAdd = (cat) => {\n        // console.log(categories)\n        dispatch(catAdd(cat))\n    }\n\n    /////////////////////////////////////////////////\n\n    // console.log(tasks);\n\n\n    // const state = {\n    //     books: { \n    //         drama, \n    //         commedies, \n    //         {sciencefiction:{\n    //             harry potter,\n    //             lord of the ring,\n    //             star wars\n    //         }}\n    //     }\n    // };\n\n    const tree = [\n        {\n            id: '1',\n            title: 'item1', \n            icon: 'folder',\n            state: 'open',\n            items: [\n                {\n                    id: '2',\n                    title: 'item1.1',\n                    icon: 'file',\n                    state: 'open',\n                    items: [\n                        {\n                            id: '2',\n                            title: 'item1.1.1',\n                            icon: 'file',\n                            state: 'open',\n                            items: []\n                        },\n                        {\n                            id: '2',\n                            title: 'item1.1.2',\n                            icon: 'file',\n                            state: 'open',\n                            items: []\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: '3',\n            title: 'item3', \n            icon: 'folder',\n            state: 'open',\n            items: [\n                {\n                    id: '2',\n                    title: 'item3.1',\n                    icon: 'file',\n                    state: 'open',\n                    items: []\n                }\n            ]\n        }\n    ]\n\n    const render = (tree, space) => {\n        tree.map((item) => {\n            console.log(space + item.title);\n            return <h1>{item.title}</h1>\n            if(item.items !== []){\n                render(item.items, space+\" \");\n            }\n        } )\n        // console.log(tree)\n    }\n\n    render(tree, \" \");\n\n\n    \n\n    // console.log(obj);\n\n    return (\n        // <div>\n        //     <MyNavbar/>            \n        //     <Sidebar categAdd={categoryAdd} cats={categories}/>\n        //     <Switch>\n\n        //         {/* {categories.map((item,i) => ( */}\n        //             <Route  path={'/'}>\n        //                 <Tasks location={location}  prior={prior} del={del} taskAdd={taskAdd} complete={com} tasks={tasks}/>\n        //             </Route>\n        //         {/* ))} */}\n                \n\n        //     </Switch>\n            \n        // </div>\n        <>\n            \n            <MyNavbar/>\n            {/* <Sidebar categAdd={categoryAdd} cats={categories}/> */}\n            <TaskItem/>\n            <render/>\n\n        </>\n    )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}