{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/DumbComponents/TaskSection/Tasks/Tasks.js\";\nimport React from 'react';\nimport Task from '../Task/Task';\nimport Filter from '../Filter/Filter';\nimport Input from '../Input/Input';\nimport PropTypes from 'prop-types';\nimport './Tasks.css';\nimport queryString from 'query-string';\n\nconst Tasks = props => {\n  const tasks = props.tasks; // const queryString = require('query-string');\n\n  const parsed = queryString.parse(location.search); // console.log(props.tasks)\n\n  const compl = id => {\n    console.log(parsed);\n    props.complete(id);\n  };\n\n  const taskAdd = obj => {\n    props.taskAdd(obj);\n  };\n\n  const del = id => {\n    props.del(id);\n  };\n\n  const prior = (id, priority) => {\n    props.prior(id, priority);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      taskAdd: taskAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), tasks.map((item, key) => /*#__PURE__*/_jsxDEV(Task, {\n      del: del,\n      prior: prior,\n      compl: compl,\n      task: item\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 39\n    }, this)), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Tasks;\nTasks.propTypes = {\n  tasks: PropTypes.array,\n  taskAdd: PropTypes.func,\n  compl: PropTypes.func,\n  del: PropTypes.func\n};\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/DumbComponents/TaskSection/Tasks/Tasks.js"],"names":["React","Task","Filter","Input","PropTypes","queryString","Tasks","props","tasks","parsed","parse","location","search","compl","id","console","log","complete","taskAdd","obj","del","prior","priority","map","item","key","propTypes","array","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB,CADqB,CAErB;;AACA,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAZ,CAAkBC,QAAQ,CAACC,MAA3B,CAAf,CAHqB,CAIrB;;AACA,QAAMC,KAAK,GAAIC,EAAD,IAAQ;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAF,IAAAA,KAAK,CAACU,QAAN,CAAeH,EAAf;AACH,GAHD;;AAKA,QAAMI,OAAO,GAAIC,GAAD,IAAS;AACrBZ,IAAAA,KAAK,CAACW,OAAN,CAAcC,GAAd;AACH,GAFD;;AAIA,QAAMC,GAAG,GAAIN,EAAD,IAAQ;AAChBP,IAAAA,KAAK,CAACa,GAAN,CAAUN,EAAV;AACH,GAFD;;AAIA,QAAMO,KAAK,GAAG,CAACP,EAAD,EAAKQ,QAAL,KAAkB;AAC5Bf,IAAAA,KAAK,CAACc,KAAN,CAAYP,EAAZ,EAAgBQ,QAAhB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKV,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAAe,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEL,GAAX;AAAgB,MAAA,KAAK,EAAEC,KAAvB;AAA8B,MAAA,KAAK,EAAER,KAArC;AAA4C,MAAA,IAAI,EAAEW;AAAlD,OAA6DC,GAA7D;AAAA;AAAA;AAAA;AAAA,YAAzB,CAFL,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7BD;;KAAMnB,K;AA+BNA,KAAK,CAACoB,SAAN,GAAkB;AACdlB,EAAAA,KAAK,EAAEJ,SAAS,CAACuB,KADH;AAEdT,EAAAA,OAAO,EAAEd,SAAS,CAACwB,IAFL;AAGdf,EAAAA,KAAK,EAAET,SAAS,CAACwB,IAHH;AAIdR,EAAAA,GAAG,EAAEhB,SAAS,CAACwB;AAJD,CAAlB;AAOA,eAAetB,KAAf","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport Filter from '../Filter/Filter'\nimport Input from '../Input/Input'\nimport PropTypes from 'prop-types';\nimport './Tasks.css';\nimport queryString from 'query-string';\n\n\nconst Tasks = (props) => {\n    const tasks = props.tasks;\n    // const queryString = require('query-string');\n    const parsed = queryString.parse(location.search);\n    // console.log(props.tasks)\n    const compl = (id) => {\n        console.log(parsed)\n        props.complete(id);\n    }\n\n    const taskAdd = (obj) => {\n        props.taskAdd(obj)\n    }\n\n    const del = (id) => {\n        props.del(id);\n    }\n\n    const prior = (id, priority) => {\n        props.prior(id, priority)\n    }\n\n    return (\n        <div className='tasks'>\n            <Input taskAdd={taskAdd}/>\n            {tasks.map((item, key) => <Task del={del} prior={prior} compl={compl} task={item} key={key}/>)}\n            <Filter/>\n        </div>\n    )\n}\n\nTasks.propTypes = {\n    tasks: PropTypes.array,\n    taskAdd: PropTypes.func,\n    compl: PropTypes.func,\n    del: PropTypes.func\n};\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}