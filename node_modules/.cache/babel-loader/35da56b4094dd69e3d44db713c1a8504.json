{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/illia/addnote/front/src/Containers/Tree/Tree.js\";\nimport React from 'react'; // import {useState} from 'react'\n// const render = (tree, state=[], space=' ') => {\n//     let arr = state;\n//     tree.map((item) => {\n//         // arr = [...arr, item.title] \n//         console.log(space+item.title);\n//         if(item.items !== []){\n//             render(item.items, arr, space + ' ');\n//         }          \n//     } )\n// }\n\nconst TreeItem = ({\n  item\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  children: [item.title, item.items ? /*#__PURE__*/_jsxDEV(Tree, {\n    items: item.items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 60\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 30\n}, this);\n\n_c = TreeItem;\n\nconst Tree = ({\n  items\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: items.map(i => /*#__PURE__*/_jsxDEV(TreeItem, {\n    item: i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 27\n}, this);\n\n_c2 = Tree;\nexport default Tree;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TreeItem\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"sources":["/home/illia/addnote/front/src/Containers/Tree/Tree.js"],"names":["React","TreeItem","item","title","items","Tree","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBAAY;AAAA,aAAKA,IAAI,CAACC,KAAV,EAAiBD,IAAI,CAACE,KAAL,gBAAa,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,IAAI,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAb,GAA0C,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B;;KAAMH,Q;;AAGN,MAAMI,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,kBAAa;AAAA,YACrBA,KAAK,CAACE,GAAN,CAAUC,CAAC,iBAAI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAf;AADqB;AAAA;AAAA;AAAA;AAAA,QAA1B;;MAAMF,I;AAKN,eAAeA,IAAf","sourcesContent":["import React from 'react';\n// import {useState} from 'react'\n\n  \n\n// const render = (tree, state=[], space=' ') => {\n//     let arr = state;\n//     tree.map((item) => {\n//         // arr = [...arr, item.title] \n//         console.log(space+item.title);\n        \n//         if(item.items !== []){\n//             render(item.items, arr, space + ' ');\n//         }          \n//     } )\n// }\n\nconst TreeItem = ({item}) => <li>{item.title}{item.items ? <Tree items={item.items}/> : null}</li>\n\n\nconst Tree = ({items}) => <ul>\n    {items.map(i => <TreeItem item={i}/>)}        \n</ul>\n\n\nexport default Tree\n"]},"metadata":{},"sourceType":"module"}